#pragma once

#include <LiquidCrystal_I2C.h>
#include "DS3231.h"

// Параметры системы
#define lowP 0.11 // пороговое значение давления, при котором срабатывает реле подкачки воды в систему
#define pinPRES A0 // контакт, на которые приходит сигнал от датчика давления
#define pinRELAY1 A2 // контакт управления реле 1
#define pinRELAY2 A3 // контакт управления реле 2
#define adressP_EEPROM 10 // адрес в EEPROM значения порогового давления, установленного пользователем
#define adressQ_EEPROM 14 // адрес в EEPROM количества срабатываний по событию низкого давления

// Параметры LCD экрана
#define lcdCOL 16 // количество знаков в строке экрана (параметр экрана)
#define lcdROW 2  // количество строк на экране (параметр экрана)
#define lcdREFR 1000 // время в мс для обновления информации на экране

// Параметры кнопок
#define butPUMP 9 // кнопка включающая принудительную подкачку
#define butLEFT 10 // кнопка уменьшающая значение при настройке параметра
#define butRIGHT 11 // кнопка увеличивающая значение при настройке параметра
#define butSET 12 // кнопка перехода на следующий параметр при настройке
#define waitKey 5 // пауза в мс между опросами состояния кнопок
#define retPAUSE 100 // пауза в мс для устранения дребезга при нажатии кнопок

// Создание и инициализация экрана
extern LiquidCrystal_I2C lcd; // Инициализация библиотеки работы с LCD

// Создание, инициализация и настройка часов, создание необходимых переменных
extern DS3231 Clock; // создание объекта часов

extern bool Century;
extern bool h24;
extern bool PM;
extern byte ADay, AHour, AMinute, ASecond, ABits;
extern bool ADy, A12h, Apm;

extern byte year, month, date, DoW, hour, minute, second;

// Переменные системы
extern int lyear,  // Год, в котором произошло последнее срабатывание по низкому давлению
           lmonth, // Месяц -//-
           ldate;  // День -//-

extern int quantEVENT; // количество событий включения подкачки с момента включения системы
extern float userP; // пороговое значение давления установленное пользователем

extern int curPOSX; // позиция курсора экране по оси X (столбец)
extern int curPOSY; // позиция курсора экране по оси Y (строка)

/* В нормальном режиме на экране отображаются текущая дата, время, дата последнего события, количество событий и текущее давление.
Курсор не показывается. При нажатии кнопки перемещения влево или вправо, включается режим правки параметров. На экране отображается
пороговое давление и мигает курсор. По истечение времени setmodeTIME, режим правки параметров выключается. */
extern bool setMODE; // режим установки параметров
extern int countSETMODE; // таймер выхода из режима правки
#define setmodeTIME 10000 // время в мс до выхода из режима правки параметров